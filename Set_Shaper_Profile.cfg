### Thanks to @LastZeanon (Discord) for providing the base of this code

[gcode_macro SET_SHAPER_PROFILE]
gcode:
  {% set PROFILE = params.PROFILE|default('default')|string %}
  SAVE_VARIABLE VARIABLE=shaper_profile VALUE="'{PROFILE}'"
  LOAD_SHAPER_PROFILE

[gcode_macro LOAD_SHAPER_PROFILE]
gcode:
  {% set VERBOSE = params.VERBOSE|default('True')|int %}
  {% if VERBOSE %}
    {% set VERBOSE = 1|int %}
  {% else %}
    {% set VERBOSE = 0|int %}
  {% endif %}
  
   {% if printer.save_variables.variables.shaper_profile is defined %}
    {% set SHAPER_PROFILE_NAME = printer.save_variables.variables.shaper_profile|string|lower %}
      {% if printer['gcode_macro SHAPER_PROFILES'][SHAPER_PROFILE_NAME] is defined %}
      {% set SHAPER_PROFILE = printer["gcode_macro SHAPER_PROFILES"][SHAPER_PROFILE_NAME] %}
      
      # Determine if X-axis shaper is normal or smooth and update accordingly
      {% if "shaper_freq_x" in SHAPER_PROFILE %}
         RESPOND MSG="<span class=warning--text>Configuring Standard Shaper for X axis</span>"
         SET_INPUT_SHAPER SHAPER_TYPE_X={SHAPER_PROFILE["shaper_x"]} SHAPER_FREQ_X={SHAPER_PROFILE["shaper_freq_x"]} DAMPING_RATIO_X={SHAPER_PROFILE["damping_ratio_x"]} 
      {% else %}
         RESPOND MSG="<span class=warning--text>Configuring Smooth Shaperfor X axis</span>"
         SET_INPUT_SHAPER SHAPER_TYPE_X={SHAPER_PROFILE["shaper_type_x"]} SMOOTHER_FREQ_X={SHAPER_PROFILE["smoother_freq_x"]} 
      {% endif %}

      # Determine if Y-axis shaper is normal or smooth and update accordingly
      {% if "shaper_freq_y" in SHAPER_PROFILE %}
         RESPOND MSG="<span class=warning--text>Configuring Standard Shaper for Y axis</span>"
         SET_INPUT_SHAPER SHAPER_TYPE_Y={SHAPER_PROFILE["shaper_y"]} SHAPER_FREQ_Y={SHAPER_PROFILE["shaper_freq_y"]} DAMPING_RATIO_Y={SHAPER_PROFILE["damping_ratio_y"]} 
      {% else %}
         RESPOND MSG="<span class=warning--text>Configuring Smooth Shaper for Y axis</span>"
         SET_INPUT_SHAPER SHAPER_TYPE_Y={SHAPER_PROFILE["shaper_type_y"]} SMOOTHER_FREQ_Y={SHAPER_PROFILE["smoother_freq_y"]} 
      {% endif %}

      # Set max acceleration per axis if defined
      {% if "max_x_accel" in SHAPER_PROFILE %}
        SET_VELOCITY_LIMIT X_ACCEL={ SHAPER_PROFILE["max_x_accel"] }
      {% else %}
        # Not undefined, set to printer max and let slicer config set limits
        SET_VELOCITY_LIMIT X_ACCEL={ printer.toolhead.max_accel }
      {% endif %}
      {% if "max_y_accel" in SHAPER_PROFILE %}
        SET_VELOCITY_LIMIT Y_ACCEL={ SHAPER_PROFILE["max_y_accel"] }
      {% else %}
        # If undefined, set to printer max and let slicer config set limits
        SET_VELOCITY_LIMIT Y_ACCEL={ printer.toolhead.max_accel }
      {% endif %}
        
      RESPOND MSG="<span class=warning--text>Selected Input_Shaper Profile:</span> <span class=error--text>{SHAPER_PROFILE_NAME|upper}</span>"
    {% else %}
      RESPOND MSG="<span class=error--text>Shaper Profile</span> <span class=warning--text>{SHAPER_PROFILE_NAME|upper}</span> <span class=error--text>does not exist, using default from config</span>"
    {% endif %}
  {% else %}
    RESPOND MSG="<span class=error--text>No shaper profile saved, using default from config</span>"
  {% endif %}

[gcode_macro SHAPER_PROFILES]        #
variable_performance:                #
  {                                  #
    'shaper_x': 'mzv',               #
    'shaper_freq_x': 68.4,           #
    'damping_ratio_x': 0.068,        #
    'shaper_y': 'mzv',               #
    'shaper_freq_y': 42.6,           #
    'damping_ratio_y': 0.078,        #
  }
variable_quality:                             #
  {                                  #
    'shaper_type_x': 'smooth_ei',    #
    'smoother_freq_x': 67.0,         #
    'shaper_type_y': 'smooth_ei',    #
    'smoother_freq_y': 41.2,         #
    'max_y_accel': 5320,             #
  }
gcode:
  # Do Nothing
